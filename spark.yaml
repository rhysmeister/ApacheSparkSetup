---
  - hosts: all
    gather_facts: yes
    become: yes
    vars:
      apache_spark_tar_archive: http://www-us.apache.org/dist/spark/spark-2.3.1/spark-2.3.1-bin-hadoop2.7.tgz

      additional_packages: [ "curl",
                             "gpgme",
                             "centos-release-scl",
                             "git",
                             "python2-pip" ]

      python_packages: [
          "numpy",
          "scipy",
          "pandas",
          "sympy",
          "nose",
          "py4j",
          "pyspark"
      ]

    tasks:

      - name: Ensure epel is available
        yum:
          name: "epel-release"
          state: present

      - name: Ensure additional packages are installed
        yum:
          name: "{{ additional_packages }}"
          state: present

      - name: Download Apache Spark archive
        get_url:
          url: "{{ apache_spark_tar_archive }}"
          dest: "/home/vagrant/{{ apache_spark_tar_archive | basename }}"
        become: no

      - name:
        unarchive:
          src: "/home/vagrant/{{ apache_spark_tar_archive | basename }}"
          dest: /home/vagrant
          remote_src: yes
          creates: "/home/vagrant/{{ apache_spark_tar_archive | basename | replace('.tgz', '') }}"

      - name: Ensure /opt/apache-spark exists
        file:
          path: /opt/apache-spark
          state: directory

      - name: Move Apache files to /opt/apache-spark
        shell: "mv /home/vagrant/{{ apache_spark_tar_archive | basename | replace('.tgz', '') }}/* /opt/apache-spark/"
        args:
          creates: /opt/apache-spark/README.md

      - name: Ensure .bash_profile is correctly setup for Spark
        lineinfile:
          path: /home/vagrant/.bash_profile
          regexp: "{{ item['regexp'] }}"
          line: "{{ item['line'] }}"
        with_items:
          - { "regexp": "^export SPARK_HOME=", "line": "export SPARK_HOME=/opt/apache-spark" }
          - { "regexp": '^export PATH=\$PATH:\$SPARK_HOME/bin', "line": "export PATH=$PATH:$SPARK_HOME/bin" }

      - name: Ensure  log4j.properties exists
        command: cp /opt/apache-spark/conf/log4j.properties.template /opt/apache-spark/conf/log4j.properties
        args:
          creates: /opt/apache-spark/conf/log4j.properties

      - name: Ensure logging level for Spark is set to ERROR
        lineinfile:
          path: /opt/apache-spark/conf/log4j.properties
          regexp: "^log4j.rootCategory="
          line: "log4j.rootCategory=ERROR, console"

      - name: Checkout tutorial project
        git:
          repo: https://github.com/rhysmeister/python-spark-tutorial.git
          dest: /home/vagrant/python-spark-tutorial/
        become: no

      - name: Ensure Python Packages are installed
        pip:
          name: "{{ item }}"
          state: present
        with_items:
          - "{{ python_packages }}"
